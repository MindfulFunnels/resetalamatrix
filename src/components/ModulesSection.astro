---
interface Lesson {
  title: string;
  duration: string;
}

interface Module {
  title: string;
  description: string | string[];
}

const modules: Module[] = [
  {
    title: "Empieza por aquí",
    description:
      "Guía rápida para comenzar cuanto antes con tu transformación.",
  },
  {
    title: "Mentalidad de otro planeta",
    description:
      "Entrena e integra en tu esencia la mentalidad del 1% con la que podrás conseguir lo que quieras. El límite solo está en tu mente.",
  },
  {
    title: "Conoce al enemigo y el escenario",
    description:
      "Sabrás sortear la manipulación y el engaño del sistema y las élites oscuras.",
  },
  {
    title: "Descubre las trampas del sistema",
    description:
      "Aprenderás a identificar las trampas que adormecen tu espíritu y alimentan tu ego, a través del materialismo desequilibrado, el consumismo, los condicionamientos sociales impuestos, el engaño del negocio de salud, el control mental hacia las masas a través de los medios de comunicación, la manipulación de la política y sus dirigentes, y la parasitación energética hacia el ser humano.",
  },
  {
    title: "Desparasitación multidimensional",
    description: [
      "Desparasitaje completo a nivel físico, mental, emocional, energético y espiritual.",
      "Ruptura con energías, entidades y parásitos del bajo astral que impiden tu avance en la vida, en cualquiera de las áreas humanas.",
      "Eliminación y cancelación de contratos, rezos, pedidos y actividades de new age o falsa espiritualidad, que confunden y desvían al ser humano de la consciencia expandida.",
    ],
  },
  {
    title: "Hackear el sistema desde el ikigai",
    description: [
      "Descubrir tu propósito de vida y lograr vivir del él es la salida de la matrix, el verdadero hackeo al sistema y las energías negativas.",
      "La verdadera libertad y prosperidad en todos los sentidos, se logra convirtiendo lo que más amas hacer en tu profesión, modo de vida y propósito divino.",
    ],
  },
  {
    title: "Masterclass exclusivas",
    description:
      "Contenido creado desde el corazón, no para entretenerte, sino para transformarte.",
  },
];

const bonusModules: Module[] = [
  {
    title: "Curso completo: Hackeando el sistema de control",
    description:
      "En este bonus exclusivo vas a descubrir cómo funciona el entramado oculto que mantiene a la humanidad sometida: educación, medios, política, tecnología y más. Aprende a detectar los mecanismos de control y, sobre todo, a neutralizarlos desde tu conciencia.",
  },
  {
    title: "Curso completo: Hackeando emociones negativas",
    description:
      "Las emociones son puertas de acceso a tu verdadero poder o a tu prisión interior. En este curso vas a aprender a identificar, comprender y transformar emociones como el miedo, la ira o la culpa en energía creativa, expansión y libertad interior.",
  },
  {
    title: "Formaciones en directo",
    description:
      "Semana a semana, se subiran las sesiones que fueron grabadas, para que puedas verlas en diferido.",
  },
];
---

<section class='py-8'>
  <div class='container mx-auto px-4'>
    <h2 class='text-5xl font-bold text-center mb-4 text-white'>
      Contenido del Programa
    </h2>
    <p class='text-xl text-gray-300 text-center mb-16 max-w-2xl mx-auto'>
      Explora los módulos que componen nuestro programa de transformación
      personal
    </p>
    <div class='max-w-5xl mx-auto space-y-4'>
      {
        modules.map((module, index) => (
          <div class='bg-gray-800/80 backdrop-blur-sm rounded-xl overflow-hidden h-full border border-purple-500/10 hover:border-purple-500/30 transition duration-300'>
            <button
              id={`module-button-${index}`}
              class='cursor-pointer w-full px-6 py-4 text-left flex items-center justify-between hover:bg-gray-700/50 transition-colors'
            >
              <div class='flex-1'>
                <div class='flex items-center justify-between'>
                  <h3 class='text-2xl font-semibold text-white hover:text-transparent hover:bg-clip-text hover:bg-gradient-to-r hover:from-purple-400 hover:to-pink-400 transition-all duration-300'>
                    {module.title}
                  </h3>
                </div>
              </div>
              <svg
                class='w-5 h-5 text-purple-400 ml-4 transition-transform duration-300'
                fill='none'
                stroke='currentColor'
                viewBox='0 0 24 24'
              >
                <path
                  stroke-linecap='round'
                  stroke-linejoin='round'
                  stroke-width='2'
                  d='M19 9l-7 7-7-7'
                />
              </svg>
            </button>
            <div id={`module-content-${index}`} class='hidden'>
              <div class='px-6 py-4 space-y-4 border-t border-gray-700/50'>
                {Array.isArray(module.description) ? (
                  module.description.map((desc, i) => (
                    <div class='flex items-center justify-between py-2 hover:bg-gray-700/30 px-4 rounded-lg transition-colors'>
                      {desc}
                    </div>
                  ))
                ) : (
                  <div class='flex items-center justify-between py-2 hover:bg-gray-700/30 px-4 rounded-lg transition-colors'>
                    {module.description}
                  </div>
                )}
              </div>
            </div>
          </div>
        ))
      }
    </div>
  </div>

  <section class='mt-16'>
    <div class='container mx-auto px-4'>
      <h2 class='text-5xl font-bold text-center mb-4 text-white'>
        Contenido Bonus
      </h2>
      <div class='max-w-5xl mx-auto space-y-4'>
        {
          bonusModules.map((module, index) => (
            <div class='bg-gray-800/80 backdrop-blur-sm rounded-xl overflow-hidden h-full border border-purple-500/10 hover:border-purple-500/30 transition duration-300'>
              <button
                id={`bonus-module-button-${index}`}
                class='cursor-pointer w-full px-6 py-4 text-left flex items-center justify-between hover:bg-gray-700/50 transition-colors'
              >
                <div class='flex-1'>
                  <div class='flex items-center justify-between'>
                    <h3 class='text-2xl font-semibold text-white hover:text-transparent hover:bg-clip-text hover:bg-gradient-to-r hover:from-purple-400 hover:to-pink-400 transition-all duration-300'>
                      {module.title}
                    </h3>
                  </div>
                </div>
                <svg
                  class='w-5 h-5 text-purple-400 ml-4 transition-transform duration-300'
                  fill='none'
                  stroke='currentColor'
                  viewBox='0 0 24 24'
                >
                  <path
                    stroke-linecap='round'
                    stroke-linejoin='round'
                    stroke-width='2'
                    d='M19 9l-7 7-7-7'
                  />
                </svg>
              </button>
              <div id={`bonus-module-content-${index}`} class='hidden'>
                <div class='px-6 py-4 space-y-4 border-t border-gray-700/50'>
                  {Array.isArray(module.description) ? (
                    module.description.map((desc, i) => (
                      <div class='flex items-center justify-between py-2 hover:bg-gray-700/30 px-4 rounded-lg transition-colors'>
                        {desc}
                      </div>
                    ))
                  ) : (
                    <div class='flex items-center justify-between py-2 hover:bg-gray-700/30 px-4 rounded-lg transition-colors'>
                      {module.description}
                    </div>
                  )}
                </div>
              </div>
            </div>
          ))
        }
      </div>
    </div>
  </section>

  <script is:inline>
    document.addEventListener("DOMContentLoaded", function () {
      const buttons = document.querySelectorAll('[id^="module-button-"]');
      const bonusButtons = document.querySelectorAll(
        '[id^="bonus-module-button-"]'
      );

      buttons.forEach((button, index) => {
        button.addEventListener("click", () => {
          const content = document.getElementById(`module-content-${index}`);
          const icon = button.querySelector("svg");
          const title = button.querySelector("h3");

          // Cerrar todos los otros módulos
          buttons.forEach((otherButton, otherIndex) => {
            if (otherIndex !== index) {
              const otherContent = document.getElementById(
                `module-content-${otherIndex}`
              );
              const otherIcon = otherButton.querySelector("svg");
              const otherTitle = otherButton.querySelector("h3");
              otherContent.classList.add("hidden");
              otherIcon.style.transform = "rotate(0deg)";
              otherTitle.classList.remove("active");
              otherTitle.classList.remove(
                "text-transparent",
                "bg-clip-text",
                "bg-gradient-to-r",
                "from-purple-400",
                "to-pink-400"
              );
            }
          });

          // Alternar el módulo actual
          content.classList.toggle("hidden");
          icon.style.transform = content.classList.contains("hidden")
            ? "rotate(0deg)"
            : "rotate(180deg)";

          if (!content.classList.contains("hidden")) {
            title.classList.add(
              "text-transparent",
              "bg-clip-text",
              "bg-gradient-to-r",
              "from-purple-400",
              "to-pink-400",
              "active"
            );
          } else {
            title.classList.remove(
              "text-transparent",
              "bg-clip-text",
              "bg-gradient-to-r",
              "from-purple-400",
              "to-pink-400",
              "active"
            );
          }
        });
      });

      bonusButtons.forEach((button, index) => {
        button.addEventListener("click", () => {
          const content = document.getElementById(
            `bonus-module-content-${index}`
          );
          const icon = button.querySelector("svg");
          const title = button.querySelector("h3");

          // Cerrar todos los otros módulos bonus
          bonusButtons.forEach((otherButton, otherIndex) => {
            if (otherIndex !== index) {
              const otherContent = document.getElementById(
                `bonus-module-content-${otherIndex}`
              );
              const otherIcon = otherButton.querySelector("svg");
              const otherTitle = otherButton.querySelector("h3");
              otherContent.classList.add("hidden");
              otherIcon.style.transform = "rotate(0deg)";
              otherTitle.classList.remove("active");
              otherTitle.classList.remove(
                "text-transparent",
                "bg-clip-text",
                "bg-gradient-to-r",
                "from-purple-400",
                "to-pink-400"
              );
            }
          });

          // Alternar el módulo actual
          content.classList.toggle("hidden");
          icon.style.transform = content.classList.contains("hidden")
            ? "rotate(0deg)"
            : "rotate(180deg)";

          if (!content.classList.contains("hidden")) {
            title.classList.add(
              "text-transparent",
              "bg-clip-text",
              "bg-gradient-to-r",
              "from-purple-400",
              "to-pink-400",
              "active"
            );
          } else {
            title.classList.remove(
              "text-transparent",
              "bg-clip-text",
              "bg-gradient-to-r",
              "from-purple-400",
              "to-pink-400",
              "active"
            );
          }
        });
      });
    });
  </script>

  <style>
    .module-content {
      transition: all 0.3s ease-in-out;
    }

    .module-button[aria-expanded="true"] svg {
      transform: rotate(180deg);
    }

    h3.active {
      color: transparent;
      background-clip: text;
      background-image: linear-gradient(to right, #a855f7, #ec4899);
      -webkit-background-clip: text;
    }
  </style>
</section>
